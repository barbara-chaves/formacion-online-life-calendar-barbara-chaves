{"version":3,"sources":["components/MiniStatus.js","components/Form.js","containers/FormContainer.js","actions/index.js","modules/formatDate.js","components/Status.js","components/StatusList.js","components/App.js","reducers/newStatusReducer.js","reducers/selectedStatusReducer.js","reducers/index.js","reducers/saveSateReducer.js","index.js","modules/localStorage.js"],"names":["MiniStatus","status","selected","className","Form","date","message","reset","save","newState","datesList","handleStatusChange","e","target","value","handleClick","preventDefault","id","isSelected","isChecked","type","name","onChange","Date","now","includes","checked","to","rows","placeholder","disabled","onClick","connect","state","stateList","map","dispatch","payload","mess","getMessage","getStatus","newStatus","saveStatus","props","formatDate","split","Status","statusList","select","key","App","initialState","selectedStatusReducer","action","combineReducers","sort","a","b","loadedState","serializeState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","reducer","window","__REDUX_DEVTOOLS_EXTENSION__","subscribe","stringify","setItem","console","log","saveState","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f214f07.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../styles/ministatus.scss\";\n\nexport const MiniStatus = ({ status, selected }) => {\n  return (\n    <div className=\"ministatus\">\n      <div className={\"ministatus__face \" + status + ' ' + selected}>\n        <div className=\"ministatus__face__eyes\"></div>\n        <div className=\"ministatus__face__mouth\"></div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"../styles/form.scss\";\nimport { MiniStatus } from \"./MiniStatus\";\n\nconst Form = ({ date, message, status, reset, save, newState, datesList }) => {\n  const handleDateChange = e => {\n    date(e.target.value);\n  };\n\n  const handleStatusChange = e => {\n    status(e.target.value);\n  };\n\n  const handleMessageChange = e => {\n    if (newState.status === \"happy\") {\n      message(e.target.value);\n    }\n  };\n\n  const handleClick = e => {\n    e.preventDefault();\n    if (e.target.id === \"save\") {\n      save(newState);\n      reset();\n    } else if (e.target.id === \"reset\") {\n      reset();\n    }\n  };\n\n  const isSelected = status => {\n    return status === newState.status ? \"selected\" : \"\";\n  };\n\n  const isChecked = status => {\n    return newState.status === status ? true : false;\n  };\n\n  const isMessageDesabled = () => {\n    return newState.status === \"sad\" ? true : false;\n  };\n\n  const isSaveDisabled = () => {\n    return !newState.date || datesList.includes(newState.date) ||\n      new Date(newState.date) > Date.now()\n      ? true\n      : false;\n  };\n\n  const tooltip = () => {\n    if (new Date(newState.date) > Date.now()) {\n      return (\n        <div className=\"tooltip\">La fecha tiene que ser de hoy o anterior</div>\n      );\n    } else if (datesList.includes(newState.date)) {\n      return (\n        <div className=\"tooltip\">Ya ha sido guardado un status con esta fecha</div>\n      );\n    } \n    return null;\n  };\n\n  return (\n    <form className=\"form\">\n      <div className=\"form__date\">\n        <label>Fecha</label>\n        <input\n          type=\"date\"\n          name=\"date\"\n          className=\"form__input\"\n          onChange={handleDateChange}\n          value={newState.date}\n        />\n        {tooltip()}\n      </div>\n      <div className=\"form__status\">\n        <p className=\"form__status__text\">Estado</p>\n        <div className=\"form__status__wrap\">\n          <label className=\"form__status__label\">\n            <MiniStatus status=\"happy\" selected={isSelected(\"happy\")} />\n            <input\n              type=\"radio\"\n              name=\"status\"\n              value=\"happy\"\n              onChange={handleStatusChange}\n              checked={isChecked(\"happy\")}\n            />\n          </label>\n          <label className=\"form__status__label\">\n            <MiniStatus status=\"sad\" selected={isSelected(\"sad\")} />\n            <input\n              className=\"form__input\"\n              type=\"radio\"\n              name=\"status\"\n              value=\"sad\"\n              onChange={handleStatusChange}\n              checked={isChecked(\"sad\")}\n            />\n          </label>\n        </div>\n      </div>\n      <div className=\"form__message\">\n        <label to=\"text\">Mensaje</label>\n        <textarea\n          className=\"form__input\"\n          id=\"text\"\n          name=\"message\"\n          onChange={handleMessageChange}\n          value={newState.message}\n          rows=\"2\"\n          placeholder=\"Si estÃ¡s feliz puedes dejar un mensaje\"\n          disabled={isMessageDesabled()}\n        />\n      </div>\n      <div className=\"form__buttons\">\n        <button\n          className=\"form__input --btn\"\n          id=\"save\"\n          onClick={handleClick}\n          disabled={isSaveDisabled()}\n        >\n          Guardar\n        </button>\n        <button className=\"form__input --btn\" id=\"reset\" onClick={handleClick}>\n          Cancelar\n        </button>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import React from 'react'\nimport { connect } from \"react-redux\";\nimport { getDate, getMessage, getStatus, resetStatus, saveStatus } from \"../actions\";\n\nimport Form from '../components/Form'\n\nconst FormContainer = (props) => {\n  return <Form {...props}/>\n}\n\nconst mapStateToProps = state => ({\n  newState: state.newState,\n  datesList: state.stateList.map(state => state.date)\n})\n\nconst mapDispatchToProps = dispatch => ({\n  date: date => dispatch(getDate(date)),\n  message: mess => dispatch(getMessage(mess)),\n  status: status => dispatch(getStatus(status)),\n  reset: () => dispatch(resetStatus()),\n  save: newStatus => dispatch(saveStatus(newStatus))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FormContainer)","export const getDate = (data) => ({\n  type: 'GET_DATE',\n  payload: data\n})\n\nexport const getStatus = (status) => ({\n  type: 'GET_STATUS',\n  payload: status\n})\n\nexport const getMessage = (message) => ({\n  type: 'GET_MESSAGE',\n  payload: message\n})\n\nexport const resetStatus = (newStatus) => ({\n  type: 'RESET_STATUS',\n  payload: newStatus\n})\n\nexport const saveStatus = (newStatus) => ({\n  type: 'SAVE_STATUS',\n  payload: newStatus\n})\n\nexport const selectStatus = (selectedStatus) => ({\n  type: 'SELECT_STATUS',\n  payload: selectedStatus\n})\n","const formatDate = date => {\n  date = date.split('-');\n  return`${date[2]}/${date[1]}/${date[0]}` \n}\n\nexport default formatDate","import React from \"react\";\nimport \"../styles/status.scss\";\nimport formatDate from '../modules/formatDate'\n\nexport const Status = ({ status, date, message }) => {\n \n  return (\n    <div className=\"status\">\n      <div className=\"status__detail\">\n        <small className=\"status__detail__date\">{formatDate(date)}</small>\n        <small className=\"status__detail__message\">{message}</small>\n      </div>\n      <div className={\"status__face \" + status}>\n        <div className='status__face__eyes'></div>\n        <div className='status__face__mouth'></div>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport \"../styles/status-list.scss\";\nimport {selectStatus} from '../actions'\nimport { Status } from \"./Status\";\n\nconst StatusList = ({ statusList, select, selected }) => {\n  const message = () => {\n    if (selected){\n      return(\n        <div className='selected'>\n          <p>{selected.date}</p>\n          <p>{selected.status}</p>\n          {selected.message ? <p>{selected.message}</p> : null}\n        </div>\n      )\n    }\n  };\n\n\n  const renderStatusList = () => {\n    return statusList.map(status => {\n      return (\n        <li\n          key={status.date}\n          className=\"status__list__item\"\n        >\n          <Status status={status.status} date={status.date} message={status.message}/>\n        </li>\n      );\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      <ul className=\"status__list\">{renderStatusList()}</ul>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  statusList: state.stateList,\n  selected: state.selected\n});\n\nconst mapDispatchToProps = dispatch => ({\n  select: status => dispatch(selectStatus(status))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(StatusList);\n","import React from 'react';\nimport '../styles/app.scss';\nimport FormContainer from '../containers/FormContainer'\nimport StatusList from './StatusList'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <FormContainer/>\n      <StatusList/>\n    </div>\n  );\n}\n\nexport default App;\n","const initialState = {\n  date: '',\n  status: 'happy',\n  message: ''\n}\n\nexport default function(state = initialState, action) {\n  switch(action.type){\n    case 'GET_DATE':\n      return {\n        ...state,\n        date: action.payload\n      }\n    case 'GET_STATUS':\n      return {\n        ...state,\n        status: action.payload\n      }\n    case 'GET_MESSAGE':\n      return {\n        ...state,\n        message: action.payload\n      }\n    case 'RESET_STATUS':\n      return initialState\n    default:\n      return state\n  }\n}","const selectedStatusReducer = (status={}, action) => {\n  switch(action.type){\n    case 'SELECT_STATUS':\n      return action.payload\n    default:\n      return status\n  }\n}\n\nexport default selectedStatusReducer","import { combineReducers } from \"redux\";\nimport newStatusReducer from './newStatusReducer'\nimport saveSateReducer from './saveSateReducer'\nimport selectedStatusReducer from './selectedStatusReducer'\n\nexport default combineReducers({\n  newState: newStatusReducer,\n  stateList: saveSateReducer,\n  selected: selectedStatusReducer\n})\n","export default function saveStateReducer(state = [], action) {\n  switch (action.type) {\n    case \"SAVE_STATUS\":\n      const newState = [...state, action.payload];\n      return newState.sort((a, b) =>\n        new Date(a.date) > new Date(b.date) ? -1 : 1\n      );\n    default:\n      return state;\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createStore } from \"redux\";\nimport { Provider } from \"react-redux\";\n\nimport App from \"./components/App\";\nimport reducer from \"./reducers\";\nimport {saveState, loadState} from './modules/localStorage'\n\nconst loadedState = loadState()\n\n/* eslint-disable no-underscore-dangle */\nconst store = createStore(\n  reducer,\n  loadedState,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n/* eslint-enable */\n\nstore.subscribe(() => saveState(store.getState()))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","export const loadState = () => {\n  try {\n    const serializeState = localStorage.getItem(\"state\");\n    if (serializeState === null) {\n      return undefined;\n    }\n    return JSON.parse(serializeState);\n  } catch (err) {\n    return undefined;\n  }\n};\n\nexport const saveState = (state) => {\n  try{\n    const serializeState = JSON.stringify(state)\n    if(state){\n      localStorage.setItem('state', serializeState)\n    }\n  }catch(err){\n    console.log(err)\n  }\n}"],"sourceRoot":""}